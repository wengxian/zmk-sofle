#define ZMK_POINTING_DEFAULT_MOVE_VAL 4200  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 30    // default: 10

#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>

#define COMBO_DEFAULT_TIMEOUT_MS 15
#define COMBO_QUICK_TIMEOUT_MS 10
#define COMBO_PRIOR_IDLE_MS 125

&mmv {
  acceleration-exponent = <1>;      // 1
  time-to-max-speed-ms = <500>;     // 300
  delay-ms = <0>;                   // 0
};

&msc {
  acceleration-exponent = <1>;      // 0
  time-to-max-speed-ms = <40>;      // 300
  delay-ms = <0>;                   // 0
};

/ {

    ltkp: ltkp {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        bindings = <&mo>, <&kp>;
        flavor = "tap-preferred";
        tapping-term-ms = <300>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <125>;
    };

    hrm: hrm {
        compatible = "zmk,behavior-hold-tap";
        bindings = <&kp>, <&kp>;
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&kp C_VOLUME_UP>, <&kp C_VOLUME_DOWN>;
        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        combo_os_switch {
            bindings = <&tog 1>;
            key-positions = <0 39>;
            timeout-ms = <COMBO_DEFAULT_TIMEOUT_MS>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE_MS>;
        };

        combo_game {
            bindings = <&tog 2>;
            key-positions = <2 41>;
            timeout-ms = <COMBO_DEFAULT_TIMEOUT_MS>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE_MS>;
        };

        combo_mouse {
            bindings = <&tog 7>;
            key-positions = <3 42>;
            timeout-ms = <COMBO_DEFAULT_TIMEOUT_MS>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE_MS>;
        };

        combo_setting {
            bindings = <&tog 5>;
            key-positions = <5 44>;
            timeout-ms = <COMBO_DEFAULT_TIMEOUT_MS>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE_MS>;
        };

        combo_bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <7 46>;
            timeout-ms = <COMBO_DEFAULT_TIMEOUT_MS>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE_MS>;
        };

        combo_bootloader {
            bindings = <&bootloader>;
            key-positions = <9 48>;
            timeout-ms = <COMBO_DEFAULT_TIMEOUT_MS>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE_MS>;
        };

        combo_bt_clear_all {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <12 51>;
            timeout-ms = <COMBO_DEFAULT_TIMEOUT_MS>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE_MS>;
        };

        combo_enter {
            bindings = <&kp ENTER>;
            key-positions = <29 30>;
            timeout-ms = <COMBO_DEFAULT_TIMEOUT_MS>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE_MS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC     &kp N1       &kp N2       &kp N3        &kp N4         &kp N5       &mmv MOVE_UP     &kp N6       &kp N7        &kp N8        &kp N9       &kp N0          &kp GRAVE
&kp TAB     &kp Q        &kp W        &kp E         &kp R          &kp T        &mmv MOVE_DOWN   &kp Y        &kp U         &kp I         &kp O        &kp P           &kp BSLH
&kp BSPC    &hrm LGUI A  &hrm LALT S  &hrm LCTRL D  &hrm LSHFT F   &kp G        &mmv MOVE_LEFT   &kp H        &hrm RSHFT J  &hrm RCTRL K  &hrm RALT L  &hrm RGUI SEMI  &kp APOS
&kp LSHFT   &kp Z        &kp X        &kp C         &kp V          &kp B        &mmv MOVE_RIGHT  &kp N        &kp M         &kp COMMA     &kp DOT      &kp FSLH        &kp ENTER
&kp C_MUTE  &kp LALT     &kp LCTRL    &ltkp 3 TAB   &ltkp 4 SPACE  &ltkp 6 DEL  &mkp LCLK        &ltkp 7 DEL  &ltkp 8 BSPC  &ltkp 9 TAB   &kp RCTRL    &kp RALT
            >;
            display-name = "WBASE";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_1 {
            bindings = <
&kp ESC     &kp N1       &kp N2       &kp N3        &kp N4         &kp N5       &mmv MOVE_UP     &kp N6       &kp N7        &kp N8        &kp N9       &kp N0          &kp GRAVE
&kp TAB     &kp Q        &kp W        &kp E         &kp R          &kp T        &mmv MOVE_DOWN   &kp Y        &kp U         &kp I         &kp O        &kp P           &kp BSLH
&kp BSPC    &hrm LGUI A  &hrm LALT S  &hrm LCTRL D  &hrm LSHFT F   &kp G        &mmv MOVE_LEFT   &kp H        &hrm RSHFT J  &hrm RCTRL K  &hrm RALT L  &hrm RGUI SEMI  &kp APOS
&kp LSHFT   &kp Z        &kp X        &kp C         &kp V          &kp B        &mmv MOVE_RIGHT  &kp N        &kp M         &kp COMMA     &kp DOT      &kp FSLH        &kp ENTER
&kp C_MUTE  &kp LALT     &kp LCTRL    &ltkp 3 TAB   &ltkp 5 SPACE  &ltkp 6 DEL  &mkp LCLK        &ltkp 7 DEL  &ltkp 8 BSPC  &ltkp 10 TAB  &kp RCTRL    &kp RALT
            >;
            display-name = "MBASE";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4     &kp N5  &mmv MOVE_UP     &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp GRAVE
&kp TAB    &kp Q   &kp W   &kp E   &kp R      &kp T   &mmv MOVE_DOWN   &kp Y   &kp U   &kp I      &kp O    &kp P     &kp BSLH
&kp BSPC   &kp A   &kp S   &kp D   &kp F      &kp G   &mmv MOVE_LEFT   &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V      &kp B   &mmv MOVE_RIGHT  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp CAPS
&trans     &trans  &trans  &trans  &kp SPACE  &mo 3   &mkp LCLK        &trans  &trans  &trans     &trans   &trans
            >;
            display-name = "GAME";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans           &trans        &trans         &trans         &trans     &mmv MOVE_UP     &trans      &trans            &trans            &trans           &trans           &trans
&trans  &kp ASTRK        &kp N7        &kp N8         &kp N9         &kp N0     &mmv MOVE_DOWN   &kp KP_NUM  &kp KP_N7         &kp KP_N8         &kp KP_N9        &kp KP_N0        &trans
&trans  &hrm LGUI MINUS  &hrm LALT N4  &hrm LCTRL N5  &hrm LSHFT N6  &kp PLUS   &mmv MOVE_LEFT   &trans      &hrm RSHFT KP_N4  &hrm RCTRL KP_N5  &hrm RALT KP_N6  &hrm RGUI COMMA  &trans
&trans  &kp SLASH        &kp N1        &kp N2         &kp N3         &kp EQUAL  &mmv MOVE_RIGHT  &trans      &kp KP_N1         &kp KP_N2         &kp KP_N3        &kp DOT          &trans
&trans  &trans           &trans        &trans         &trans         &trans     &mkp LCLK        &trans      &trans            &trans            &trans           &trans
            >;
            display-name = "NUMBER";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            bindings = <
&trans  &trans     &trans     &trans     &trans     &trans     &mmv MOVE_UP     &trans  &trans      &trans     &trans    &trans    &trans
&trans  &kp INS    &kp HOME   &kp UP     &kp END    &kp PG_UP  &mmv MOVE_DOWN   &trans  &trans      &trans     &trans    &trans    &trans
&trans  &kp LC(A)  &kp LEFT   &kp DOWN   &kp RIGHT  &kp PG_DN  &mmv MOVE_LEFT   &trans  &kp RSHIFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(Y)  &mmv MOVE_RIGHT  &trans  &trans      &trans     &trans    &trans    &trans
&trans  &trans     &trans     &trans     &trans     &trans     &mkp LCLK        &trans  &trans      &trans     &trans    &trans
            >;
            display-name = "WNAVI";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_5 {
            bindings = <
&trans  &trans     &trans     &trans     &trans     &trans         &mmv MOVE_UP     &trans  &trans      &trans     &trans    &trans    &trans
&trans  &kp INS    &kp HOME   &kp UP     &kp END    &kp PG_UP      &mmv MOVE_DOWN   &trans  &trans      &trans     &trans    &trans    &trans
&trans  &kp LG(A)  &kp LEFT   &kp DOWN   &kp RIGHT  &kp PG_DN      &mmv MOVE_LEFT   &trans  &kp RSHIFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(LS(Z))  &mmv MOVE_RIGHT  &trans  &trans      &trans     &trans    &trans    &trans
&trans  &trans     &trans     &trans     &trans     &trans         &mkp LCLK        &trans  &trans      &trans     &trans    &trans
            >;
            display-name = "MNAVI";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_6 {
            bindings = <
&trans  &trans   &trans  &trans  &trans  &trans           &mmv MOVE_UP     &trans  &trans      &trans     &trans    &trans    &trans
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &kp PSCRN        &mmv MOVE_DOWN   &trans  &trans      &trans     &trans    &trans    &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &kp SLCK         &mmv MOVE_LEFT   &trans  &kp RSHIFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK  &mmv MOVE_RIGHT  &trans  &trans      &trans     &trans    &trans    &trans
&trans  &trans   &trans  &trans  &trans  &trans           &mkp LCLK        &trans  &trans      &trans     &trans    &trans
            >;
            display-name = "FKEYS";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_7 {
            bindings = <
&out OUT_USB  &bt BT_SEL 0   &bt BT_SEL 1       &bt BT_SEL 2      &bt BT_SEL 3     &bt BT_SEL 4     &mmv MOVE_UP     &bt BT_SEL 0     &bt BT_SEL 1       &bt BT_SEL 2      &bt BT_SEL 3     &bt BT_SEL 4   &out OUT_USB
&out OUT_BLE  &kp C_BRI_UP   &kp C_PREV         &kp C_PLAY_PAUSE  &kp C_NEXT       &rgb_ug RGB_ON   &mmv MOVE_DOWN   &rgb_ug RGB_ON   &kp C_PREV         &kp C_PLAY_PAUSE  &kp C_NEXT       &kp C_BRI_UP   &out OUT_BLE
&trans        &kp C_BRI_DN   &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOLUME_UP  &rgb_ug RGB_OFF  &mmv MOVE_LEFT   &rgb_ug RGB_OFF  &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOLUME_UP  &kp C_BRI_DN   &trans
&kp C_PWR     &bt BT_DISC 0  &bt BT_DISC 1      &bt BT_DISC 2     &bt BT_DISC 3    &bt BT_DISC 4    &mmv MOVE_RIGHT  &bt BT_DISC 0    &bt BT_DISC 1      &bt BT_DISC 2     &bt BT_DISC 3    &bt BT_DISC 4  &kp C_PWR
&trans        &trans         &trans             &trans            &trans           &trans           &mkp LCLK        &trans           &trans             &trans            &trans           &trans
            >;
            display-name = "SETTING";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_8 {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans  &mmv MOVE_UP     &trans     &trans     &trans    &trans    &trans     &trans
&trans  &trans  &kp AMPS   &kp LPAR   &kp RPAR   &trans  &mmv MOVE_DOWN   &kp PLUS   &kp MINUS  &kp LBRC  &kp RBRC  &kp TILDE  &kp PIPE
&trans  &trans  &kp DLLR   &kp PRCNT  &kp ASTRK  &trans  &mmv MOVE_LEFT   &kp EQUAL  &kp UNDER  &kp LBKT  &kp RBKT  &kp COLON  &kp DQT
&trans  &trans  &kp CARET  &kp AT     &kp HASH   &trans  &mmv MOVE_RIGHT  &kp EXCL   &kp QMARK  &kp LT    &kp GT    &trans     &trans
&trans  &trans  &trans     &trans     &trans     &trans  &mkp LCLK        &trans     &trans     &trans    &trans    &trans
            >;
            display-name = "SYMBOL";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_9 {
            bindings = <
&trans  &trans     &trans          &trans          &trans           &trans          &mmv MOVE_UP     &trans  &trans          &trans          &trans           &trans  &trans
&trans  &kp INS    &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &msc SCRL_UP    &mmv MOVE_DOWN   &trans  &trans          &msc SCRL_UP    &trans           &trans  &trans
&trans  &kp LC(A)  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN  &mmv MOVE_LEFT   &trans  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &trans  &trans
&trans  &kp LC(Z)  &kp LC(X)       &kp LC(C)       &kp LC(V)        &kp LC(Y)       &mmv MOVE_RIGHT  &trans  &mkp LCLK       &mkp MCLK       &mkp RCLK        &trans  &trans
&trans  &trans     &trans          &mkp MCLK       &mkp LCLK        &mkp RCLK       &mkp LCLK        &trans  &trans          &trans          &trans           &trans
            >;
            display-name = "WMSE";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_10 {
            bindings = <
&trans  &trans     &trans          &trans          &trans           &trans          &mmv MOVE_UP     &trans  &trans          &trans          &trans           &trans  &trans
&trans  &kp INS    &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &msc SCRL_UP    &mmv MOVE_DOWN   &trans  &trans          &msc SCRL_UP    &trans           &trans  &trans
&trans  &kp LG(A)  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN  &mmv MOVE_LEFT   &trans  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &trans  &trans
&trans  &kp LG(Z)  &kp LG(X)       &kp LG(C)       &kp LG(V)        &kp LG(LS(Z))   &mmv MOVE_RIGHT  &trans  &mkp LCLK       &mkp MCLK       &mkp RCLK        &trans  &trans
&trans  &trans     &trans          &mkp MCLK       &mkp LCLK        &mkp RCLK       &mkp LCLK        &trans  &trans          &trans          &trans           &trans
            >;
            display-name = "MMSE";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
